{"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dynamicui\/anycodable\/encodable-implementations"]}],"sections":[],"metadata":{"role":"collectionGroup","roleHeading":"API Collection","modules":[{"name":"DynamicUI"}],"title":"Encodable Implementations"},"hierarchy":{"paths":[["doc:\/\/DynamicUI\/documentation\/DynamicUI","doc:\/\/DynamicUI\/documentation\/DynamicUI\/AnyCodable"]]},"identifier":{"url":"doc:\/\/DynamicUI\/documentation\/DynamicUI\/AnyCodable\/Encodable-Implementations","interfaceLanguage":"swift"},"kind":"article","topicSections":[{"identifiers":["doc:\/\/DynamicUI\/documentation\/DynamicUI\/AnyCodable\/encode(to:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"references":{"doc://DynamicUI/documentation/DynamicUI":{"url":"\/documentation\/dynamicui","title":"DynamicUI","kind":"symbol","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/DynamicUI\/documentation\/DynamicUI"},"doc://DynamicUI/documentation/DynamicUI/AnyCodable":{"kind":"symbol","title":"AnyCodable","role":"symbol","url":"\/documentation\/dynamicui\/anycodable","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyCodable"}],"identifier":"doc:\/\/DynamicUI\/documentation\/DynamicUI\/AnyCodable","abstract":[{"text":"Any Codable supports different ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" types as ","type":"text"},{"code":"String","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"and nested dictionaries ","type":"text"},{"code":"[String: AnyCodable]","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This is made so you can use ","type":"text"},{"code":"AnyCodable?","type":"codeVoice"},{"text":" in a codable struct so you can use dynamic types.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyCodable"}]},"doc://DynamicUI/documentation/DynamicUI/AnyCodable/encode(to:)":{"title":"encode(to:)","role":"symbol","url":"\/documentation\/dynamicui\/anycodable\/encode(to:)","type":"topic","identifier":"doc:\/\/DynamicUI\/documentation\/DynamicUI\/AnyCodable\/encode(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","text":"Encoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"kind":"symbol","abstract":[{"type":"text","text":"Encode the values"}]}}}