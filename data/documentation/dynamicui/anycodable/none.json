{"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"No value","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"none","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"metadata":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"none","kind":"identifier"}],"externalID":"s:9DynamicUI10AnyCodableO4noneyA2CmF","title":"AnyCodable.none","role":"symbol","modules":[{"name":"DynamicUI"}],"roleHeading":"Case","symbolKind":"case"},"kind":"symbol","identifier":{"url":"doc:\/\/DynamicUI\/documentation\/DynamicUI\/AnyCodable\/none","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/dynamicui\/anycodable\/none"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/DynamicUI\/documentation\/DynamicUI","doc:\/\/DynamicUI\/documentation\/DynamicUI\/AnyCodable"]]},"references":{"doc://DynamicUI/documentation/DynamicUI":{"url":"\/documentation\/dynamicui","title":"DynamicUI","kind":"symbol","type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/DynamicUI\/documentation\/DynamicUI"},"doc://DynamicUI/documentation/DynamicUI/AnyCodable/none":{"type":"topic","abstract":[{"text":"No value","type":"text"}],"kind":"symbol","identifier":"doc:\/\/DynamicUI\/documentation\/DynamicUI\/AnyCodable\/none","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"none","kind":"identifier"}],"url":"\/documentation\/dynamicui\/anycodable\/none","title":"AnyCodable.none","role":"symbol"},"doc://DynamicUI/documentation/DynamicUI/AnyCodable":{"kind":"symbol","title":"AnyCodable","role":"symbol","url":"\/documentation\/dynamicui\/anycodable","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyCodable"}],"identifier":"doc:\/\/DynamicUI\/documentation\/DynamicUI\/AnyCodable","abstract":[{"text":"Any Codable supports different ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" types as ","type":"text"},{"code":"String","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"and nested dictionaries ","type":"text"},{"code":"[String: AnyCodable]","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This is made so you can use ","type":"text"},{"code":"AnyCodable?","type":"codeVoice"},{"text":" in a codable struct so you can use dynamic types.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyCodable"}]}}}